{"ast":null,"code":"var _jsxFileName = \"/Users/tritchaphornboisson/All_Projects/typescript_tictactoe/src/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Cell } from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardWrapper = styled.div`\nbackground-color: #999999;\nwidth: 100%;\nheight: 100%;\ngrid-template-columns: auto auto auto;\ngrid-template-rows: auto auto auto;\ndisplay: grid;\ncolumn-gap: 6px;\nrow-gap: 6px;\n`;\n_c = BoardWrapper;\nexport const Board = ({\n  onGameEnd\n}) => {\n  _s();\n\n  const [cells, setCells] = useState(Array(9).fill(undefined));\n  const currentShape = cells.filter(n => n).length % 2 ? 'o' : 'x';\n\n  const toggleCell = index => {\n    setCells(cells => cells.map((c, i) => i === index ? 'x' : c));\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardWrapper, {\n    children: cells.map((cell, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: cell,\n      index: i,\n      toggle: toggleCell\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"qFw+jPCOcS2YeoVxK2BAH1YkRTU=\");\n\n_c2 = Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardWrapper\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/tritchaphornboisson/All_Projects/typescript_tictactoe/src/Board.tsx"],"names":["React","useState","styled","Cell","BoardWrapper","div","Board","onGameEnd","cells","setCells","Array","fill","undefined","currentShape","filter","n","length","toggleCell","index","map","c","i","cell"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAgC,QAAhC;;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,Y;AAiBN,OAAO,MAAME,KAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACpD,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAcS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcC,SAAd,CAAd,CAAjC;AAEA,QAAMC,YAAuB,GAAGL,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAlB,EAAqBC,MAArB,GAA8B,CAA9B,GAAkC,GAAlC,GAAwC,GAAxE;;AAEA,QAAMC,UAAU,GAAIC,KAAD,IAAmB;AAClCT,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACW,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAKH,KAAN,GAAc,GAAd,GAAoBE,CAAxC,CAAV,CAAR;AACH,GAFD;;AAKH,sBAAO,QAAC,YAAD;AAAA,cAECZ,KAAK,CAACW,GAAN,CAAU,CAACG,IAAD,EAAOD,CAAP,kBACN,QAAC,IAAD;AAEA,MAAA,KAAK,EAAEC,IAFP;AAGA,MAAA,KAAK,EAAED,CAHP;AAIA,MAAA,MAAM,EAAEJ;AAJR,OACOI,CADP;AAAA;AAAA;AAAA;AAAA,YADJ;AAFD;AAAA;AAAA;AAAA;AAAA,UAAP;AAYA,CAtBM;;GAAMf,K;;MAAAA,K","sourcesContent":["import React, {FC, useState} from 'react';\nimport styled from 'styled-components';\nimport { Cell, CellValue } from \"./Cell\";\n\nconst BoardWrapper = styled.div`\nbackground-color: #999999;\nwidth: 100%;\nheight: 100%;\ngrid-template-columns: auto auto auto;\ngrid-template-rows: auto auto auto;\ndisplay: grid;\ncolumn-gap: 6px;\nrow-gap: 6px;\n`;\n\ntype Winner = CellValue | 'tie'\n\ninterface BoardProps {\n    onGameEnd(winner: Winner): void;\n}\n\nexport const Board: FC<BoardProps> = ({ onGameEnd }) => {\n    const[cells, setCells] = useState<CellValue[]>(Array(9).fill(undefined));\n \n    const currentShape: CellValue = cells.filter(n => n).length % 2 ? 'o' : 'x';\n    \n    const toggleCell = (index: number) => {\n        setCells(cells => cells.map((c, i) => i === index ? 'x' : c ))\n    }\n \n \n return <BoardWrapper>\n     {\n         cells.map((cell, i ) => (\n             <Cell \n             key = {i}\n             value={cell}\n             index={i}\n             toggle={toggleCell}\n             />\n         ))\n     }\n </BoardWrapper>\n};"]},"metadata":{},"sourceType":"module"}