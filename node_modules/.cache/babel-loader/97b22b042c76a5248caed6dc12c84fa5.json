{"ast":null,"code":"var _jsxFileName = \"/Users/tritchaphornboisson/All_Projects/typescript_tictactoe_new/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport { Board } from \"./Board\";\nimport { ResetScreen } from \"./ResetScreen\";\nimport { StartScreen } from \"./StartScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  game: {\n    opacity: 1,\n    scale: 1,\n    width: \"500px\",\n    height: \"500px\",\n    transition: {\n      type: \"spring\",\n      duration: 0.8\n    }\n  },\n  start: {\n    opacity: 1,\n    scale: 1,\n    width: \"200px\",\n    height: \"100px\",\n    transition: {\n      type: \"spring\",\n      duration: 0.8\n    }\n  },\n  hidden: {\n    opacity: 0,\n    scale: 0.8\n  }\n};\nconst BoardContainer = styled(motion.div).attrs(() => ({\n  initial: 'hidden',\n  variants\n}))`\n  background: #fff;\n  border-radius: 16px;\n  box-shadow: -6px 10px 30px 4px #00000033;\n  border: 20px solid #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = BoardContainer;\n\nfunction App() {\n  _s();\n\n  const [winner, setWinner] = useState();\n  const [gameState, setGameState] = useState('start');\n\n  const onStart = () => {\n    setGameState('game');\n  };\n\n  const onGameEnd = winner => {\n    setWinner(winner);\n    setGameState('reset');\n  };\n\n  const onReset = () => {\n    setWinner(undefined);\n    setGameState('game');\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    animate: gameState,\n    children: {\n      start: /*#__PURE__*/_jsxDEV(StartScreen, {\n        onStart: onStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this),\n      game: /*#__PURE__*/_jsxDEV(Board, {\n        onGameEnd: onGameEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this),\n      reset: /*#__PURE__*/_jsxDEV(ResetScreen, {\n        winner: winner,\n        onReset: onReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }, this)\n    }[gameState]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CLR91r35A2/f2wkYb2CrLcmIuAY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/tritchaphornboisson/All_Projects/typescript_tictactoe_new/src/App.tsx"],"names":["React","useState","motion","styled","Board","ResetScreen","StartScreen","variants","game","opacity","scale","width","height","transition","type","duration","start","hidden","BoardContainer","div","attrs","initial","App","winner","setWinner","gameState","setGameState","onStart","onGameEnd","onReset","undefined","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAA8B,SAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,KAAK,EAAE,CAFH;AAGJC,IAAAA,KAAK,EAAE,OAHH;AAIJC,IAAAA,MAAM,EAAE,OAJJ;AAKJC,IAAAA,UAAU,EAAE;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AALR,GADS;AAQfC,EAAAA,KAAK,EAAE;AACLP,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,KAAK,EAAE,CAFF;AAGLC,IAAAA,KAAK,EAAE,OAHF;AAILC,IAAAA,MAAM,EAAE,OAJH;AAKLC,IAAAA,UAAU,EAAE;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AALP,GARQ;AAefE,EAAAA,MAAM,EAAE;AAACR,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,KAAK,EAAE;AAApB;AAfO,CAAjB;AAkBA,MAAMQ,cAAc,GAAGf,MAAM,CAACD,MAAM,CAACiB,GAAR,CAAN,CAAmBC,KAAnB,CAAyB,OAAK;AACnDC,EAAAA,OAAO,EAAE,QAD0C;AAEnDd,EAAAA;AAFmD,CAAL,CAAzB,CAGnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;KAAMW,c;;AAgBN,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,EAApC;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAY,OAAZ,CAA1C;;AAEA,QAAM0B,OAAO,GAAG,MAAM;AACpBD,IAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,SAAS,GAAIL,MAAD,IAAoB;AACpCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,GAHD;;AAKA,QAAMG,OAAO,GAAG,MAAM;AACpBL,IAAAA,SAAS,CAACM,SAAD,CAAT;AACAJ,IAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,GAHD;;AAIA,sBACE,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAED,SAAzB;AAAA,cAEI;AACET,MAAAA,KAAK,eAAE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEW;AAAtB;AAAA;AAAA;AAAA;AAAA,cADT;AAEEnB,MAAAA,IAAI,eAAE,QAAC,KAAD;AAAQ,QAAA,SAAS,EAAGoB;AAApB;AAAA;AAAA;AAAA;AAAA,cAFR;AAGEG,MAAAA,KAAK,eAAE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAER,MAArB;AAA6B,QAAA,OAAO,EAAEM;AAAtC;AAAA;AAAA;AAAA;AAAA;AAHT,MAIEJ,SAJF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BQH,G;;MAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport { Board, Winner } from \"./Board\";\nimport { ResetScreen } from \"./ResetScreen\";\nimport { StartScreen } from \"./StartScreen\";\n\nconst variants = {\n  game: {\n    opacity: 1, \n    scale: 1, \n    width: \"500px\", \n    height: \"500px\", \n    transition: {type:\"spring\", duration: 0.8}\n  },\n  start: { \n    opacity: 1, \n    scale: 1, \n    width: \"200px\", \n    height: \"100px\", \n    transition: {type:\"spring\", duration: 0.8}\n  },\n  hidden: {opacity: 0, scale: 0.8}\n}\n\nconst BoardContainer = styled(motion.div).attrs(()=>({\n  initial: 'hidden',\n  variants,\n}))`\n  background: #fff;\n  border-radius: 16px;\n  box-shadow: -6px 10px 30px 4px #00000033;\n  border: 20px solid #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\ntype GameState = 'start' | 'game' | 'reset';\n\n\nfunction App() {\n  const [winner, setWinner] = useState<Winner>();\n  const [gameState, setGameState] = useState<GameState>('start');\n\n  const onStart = () => {\n    setGameState('game')\n  }\n\n  const onGameEnd = (winner: Winner) => {\n    setWinner(winner)\n    setGameState('reset')\n  }\n\n  const onReset = () => {\n    setWinner(undefined)\n    setGameState('game')\n  }\n  return (\n    <BoardContainer animate={gameState}>\n      {\n        {\n          start: <StartScreen onStart={onStart}/>,\n          game: <Board  onGameEnd= {onGameEnd}/>,\n          reset: <ResetScreen winner={winner} onReset={onReset} />,\n        }[gameState]\n      }\n    </BoardContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}