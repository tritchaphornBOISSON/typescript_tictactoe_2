{"ast":null,"code":"var _jsxFileName = \"/Users/tritchaphornboisson/All_Projects/typescript_tictactoe/src/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n};\n\nconst Square = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Square;\n\nconst Board = props => {\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: props.squares[i],\n      onClick: () => props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Board;\n\nconst Game = () => {\n  _s();\n\n  const [xIsNext, setXIsNext] = useState(true);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null)\n  }]);\n\n  const handleClick = i => {\n    const newHistory = history.slice(0, stepNumber + 1);\n    const current = newHistory[newHistory.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(newHistory.concat([{\n      squares: squares\n    }]));\n    setStepNumber(newHistory.length);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n  };\n\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  });\n  let status;\n\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: current.squares,\n        onClick: i => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}; // ========================================\n\n\n_s(Game, \"IG/TQosYm2tA3tunmdagLljx0x0=\");\n\n_c3 = Game;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 147,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"sources":["/Users/tritchaphornboisson/All_Projects/typescript_tictactoe/src/index.tsx"],"names":["React","useState","ReactDOM","calculateWinner","squares","lines","i","length","a","b","c","Square","props","onClick","value","Board","renderSquare","Game","xIsNext","setXIsNext","stepNumber","setStepNumber","history","setHistory","Array","fill","handleClick","newHistory","slice","current","concat","jumpTo","step","winner","moves","map","move","desc","status","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAIA,MAAMC,eAAe,GAAIC,OAAD,IAAyC;AAC/D,QAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACxE,aAAON,OAAO,CAACI,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAlBD;;AAyBA,MAAMG,MAA6B,GAAGC,KAAK,IAAI;AAC7C,sBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMH,M;;AAaN,MAAMI,KAA2B,GAAGH,KAAK,IAAI;AAC3C,QAAMI,YAAY,GAAIV,CAAD,IAA0B;AAC7C,wBACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAEM,KAAK,CAACR,OAAN,CAAcE,CAAd,CADT;AAEE,MAAA,OAAO,EAAE,MAAMM,KAAK,CAACC,OAAN,CAAcP,CAAd;AAFjB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGU,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7BD;;MAAMD,K;;AA+BN,MAAME,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAA6B,CACjE;AACEG,IAAAA,OAAO,EAAEoB,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADX,GADiE,CAA7B,CAAtC;;AAMA,QAAMC,WAAW,GAAIpB,CAAD,IAAqB;AACvC,UAAMqB,UAAU,GAAGL,OAAO,CAACM,KAAR,CAAc,CAAd,EAAiBR,UAAU,GAAG,CAA9B,CAAnB;AACA,UAAMS,OAAO,GAAGF,UAAU,CAACA,UAAU,CAACpB,MAAX,GAAoB,CAArB,CAA1B;AACA,UAAMH,OAAO,GAAGyB,OAAO,CAACzB,OAAR,CAAgBwB,KAAhB,EAAhB;;AACA,QAAIzB,eAAe,CAACC,OAAD,CAAf,IAA4BA,OAAO,CAACE,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AACDF,IAAAA,OAAO,CAACE,CAAD,CAAP,GAAaY,OAAO,GAAG,GAAH,GAAS,GAA7B;AACAK,IAAAA,UAAU,CAACI,UAAU,CAACG,MAAX,CAAkB,CAC3B;AACE1B,MAAAA,OAAO,EAAEA;AADX,KAD2B,CAAlB,CAAD,CAAV;AAKAiB,IAAAA,aAAa,CAACM,UAAU,CAACpB,MAAZ,CAAb;AACAY,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAfD;;AAiBA,QAAMa,MAAM,GAAIC,IAAD,IAAwB;AACrCX,IAAAA,aAAa,CAACW,IAAD,CAAb;AACAb,IAAAA,UAAU,CAAEa,IAAI,GAAG,CAAR,KAAe,CAAhB,CAAV;AACD,GAHD;;AAMA,QAAMH,OAAO,GAAGP,OAAO,CAACF,UAAD,CAAvB;AACA,QAAMa,MAAM,GAAG9B,eAAe,CAAC0B,OAAO,CAACzB,OAAT,CAA9B;AAEA,QAAM8B,KAAK,GAAGZ,OAAO,CAACa,GAAR,CAAY,CAACH,IAAD,EAAOI,IAAP,KAAgB;AACxC,UAAMC,IAAI,GAAGD,IAAI,GACf,iBAAiBA,IADF,GAEf,kBAFF;AAGA,wBACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAML,MAAM,CAACK,IAAD,CAA7B;AAAA,kBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,OAASD,IAAT;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GATa,CAAd;AAWA,MAAIE,MAAJ;;AACA,MAAIL,MAAJ,EAAY;AACVK,IAAAA,MAAM,GAAG,aAAaL,MAAtB;AACD,GAFD,MAEO;AACLK,IAAAA,MAAM,GAAG,mBAAmBpB,OAAO,GAAG,GAAH,GAAS,GAAnC,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAEW,OAAO,CAACzB,OADnB;AAEE,QAAA,OAAO,EAAEE,CAAC,IAAIoB,WAAW,CAACpB,CAAD;AAF3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAMgC;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnED,C,CAqEA;;;GArEMjB,I;;MAAAA,I;AAuENf,QAAQ,CAACqC,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React, {ReactNode, useState} from 'react'\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\n\ntype SquareValue = 'X' | 'O' | null;\n\nconst calculateWinner = (squares: SquareValue[]): SquareValue => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\ninterface SquareProps {\n  onClick(): void;\n  value: SquareValue;\n}\n\nconst Square: React.FC<SquareProps> = props => {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n};\n\ninterface BoardProps {\n  onClick(i: number): void;\n  squares: SquareValue[];\n}\n\nconst Board: React.FC<BoardProps> = props => {\n  const renderSquare = (i: number): ReactNode => {\n    return (\n      <Square\n        value={props.squares[i]}\n        onClick={() => props.onClick(i)}\n      />\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n};\n\nconst Game: React.FC = () => {\n  const [xIsNext, setXIsNext] = useState<boolean>(true);\n  const [stepNumber, setStepNumber] = useState<number>(0);\n  const [history, setHistory] = useState<{squares: SquareValue[]}[]>([\n    {\n      squares: Array(9).fill(null)\n    }\n  ]);\n\n  const handleClick = (i: number): void => {\n    const newHistory = history.slice(0, stepNumber + 1);\n    const current = newHistory[newHistory.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(newHistory.concat([\n      {\n        squares: squares\n      }\n    ]));\n    setStepNumber(newHistory.length);\n    setXIsNext(!xIsNext);\n  };\n\n  const jumpTo = (step: number): void => {\n    setStepNumber(step);\n    setXIsNext((step % 2) === 0)\n  };\n\n\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n\n  const moves = history.map((step, move) => {\n    const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={current.squares}\n          onClick={i => handleClick(i)}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n};\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}