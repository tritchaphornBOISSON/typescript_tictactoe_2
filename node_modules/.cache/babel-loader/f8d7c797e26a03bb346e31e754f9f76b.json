{"ast":null,"code":"var _jsxFileName = \"/Users/tritchaphornboisson/All_Projects/typescript_tictactoe_new/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Board } from \"./Board\";\nimport { ResetScreen } from \"./ResetScreen\";\nimport { StartScreen } from \"./StartScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardContainer = styled.div`\n  background: #fff;\n  width: 500px;\n  height: 500px;\n  border-radius: 16px;\n  box-shadow: -6px 10px 30px 4px #00000033;\n  border: 20px solid #fff;\n`;\n_c = BoardContainer;\n\nfunction App() {\n  _s();\n\n  const [winner, setWinner] = useState();\n  const [gameState, setGameState] = useState('start');\n\n  const onStart = () => {\n    setGameState('game');\n  };\n\n  const onGameEnd = winner => {\n    setWinner(winner);\n    setGameState('reset');\n  };\n\n  const onReset = () => {\n    setWinner(undefined);\n    setGameState('game');\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: {\n      start: /*#__PURE__*/_jsxDEV(StartScreen, {\n        onStart: onStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this),\n      game: /*#__PURE__*/_jsxDEV(Board, {\n        onGameEnd: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this),\n      reset: /*#__PURE__*/_jsxDEV(ResetScreen, {\n        winner: winner,\n        onReset: onReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this)\n    }[gameState]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CLR91r35A2/f2wkYb2CrLcmIuAY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/tritchaphornboisson/All_Projects/typescript_tictactoe_new/src/App.tsx"],"names":["React","useState","styled","Board","ResetScreen","StartScreen","BoardContainer","div","App","winner","setWinner","gameState","setGameState","onStart","onGameEnd","onReset","undefined","start","game","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAA8B,SAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,c;;AAYN,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAY,OAAZ,CAA1C;;AAEA,QAAMY,OAAO,GAAG,MAAM;AACpBD,IAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,SAAS,GAAIL,MAAD,IAAoB;AACpCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACD,GAHD;;AAKA,QAAMG,OAAO,GAAG,MAAM;AACpBL,IAAAA,SAAS,CAACM,SAAD,CAAT;AACAJ,IAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,GAHD;;AAIA,sBACE,QAAC,cAAD;AAAA,cAEI;AACEK,MAAAA,KAAK,eAAE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEJ;AAAtB;AAAA;AAAA;AAAA;AAAA,cADT;AAEEK,MAAAA,IAAI,eAAE,QAAC,KAAD;AAAQ,QAAA,SAAS,EAAG,MAAM,CAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFR;AAGEC,MAAAA,KAAK,eAAE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEV,MAArB;AAA6B,QAAA,OAAO,EAAEM;AAAtC;AAAA;AAAA;AAAA;AAAA;AAHT,MAIEJ,SAJF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BQH,G;;MAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport { Board, Winner } from \"./Board\";\nimport { ResetScreen } from \"./ResetScreen\";\nimport { StartScreen } from \"./StartScreen\";\n\nconst BoardContainer = styled.div`\n  background: #fff;\n  width: 500px;\n  height: 500px;\n  border-radius: 16px;\n  box-shadow: -6px 10px 30px 4px #00000033;\n  border: 20px solid #fff;\n`\n\ntype GameState = 'start' | 'game' | 'reset';\n\n\nfunction App() {\n  const [winner, setWinner] = useState<Winner>();\n  const [gameState, setGameState] = useState<GameState>('start');\n\n  const onStart = () => {\n    setGameState('game')\n  }\n\n  const onGameEnd = (winner: Winner) => {\n    setWinner(winner)\n    setGameState('reset')\n  }\n\n  const onReset = () => {\n    setWinner(undefined)\n    setGameState('game')\n  }\n  return (\n    <BoardContainer>\n      {\n        {\n          start: <StartScreen onStart={onStart}/>,\n          game: <Board  onGameEnd= {() => {}}/>,\n          reset: <ResetScreen winner={winner} onReset={onReset} />,\n        }[gameState]\n      }\n    </BoardContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}